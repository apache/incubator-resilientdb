"{\"version\":3,\"sources\":[\"/webpack/bootstrap\",\"../src/color-presets.ts\",\"../src/index.ts\",\"../src/calc-text-width.ts\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"ab\",\"__dirname\",\"startup\",\"default\",\"green\",\"blue\",\"red\",\"yellow\",\"orange\",\"purple\",\"pink\",\"grey\",\"gray\",\"cyan\",\"black\",\"calc_text_width_1\",\"calcWidth\",\"Verdana110\",\"calc_text_width_2\",\"color_presets_1\",\"badgen\",\"label\",\"subject\",\"status\",\"color\",\"style\",\"icon\",\"iconWidth\",\"labelColor\",\"scale\",\"typeAssert\",\"undefined\",\"bare\",\"iconSpanWidth\",\"length\",\"sbTextStart\",\"sbTextWidth\",\"stTextWidth\",\"sbRectWidth\",\"stRectWidth\",\"width\",\"xlink\",\"sanitize\",\"str\",\"replace\",\"assertion\",\"message\",\"TypeError\",\"window\",\"widthsVerdana110\",\"charWidthTable\",\"fallbackWidth\",\"text\",\"total\",\"charWidth\",\"charCodeAt\"],\"mappings\":\"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\",\"file\":\"index.js\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t__webpack_require__.ab = __dirname + \\\"/\\\";\\n\\n \\t// the startup function\\n \\tfunction startup() {\\n \\t\\t// Load entry module and return exports\\n \\t\\treturn __webpack_require__(325);\\n \\t};\\n\\n \\t// run startup\\n \\treturn startup();\\n\",\"export default {\\n  green: '3C1',\\n  blue: '08C',\\n  red: 'E43',\\n  yellow: 'DB1',\\n  orange: 'F73',\\n  purple: '94E',\\n  pink: 'E5B',\\n  grey: '999',\\n  gray: '999',\\n  cyan: '1BC',\\n  black: '2A2A2A'\\n}\\n\",\"export { Verdana110 as calcWidth } from './calc-text-width'\\nimport { Verdana110 as calcWidth } from './calc-text-width'\\nimport colorPresets from './color-presets'\\n\\ntype StyleOption = 'flat' | 'classic'\\n\\ninterface BadgenOptions {\\n  status: string;\\n  subject?: string;\\n  color?: string;\\n  label?: string;\\n  labelColor?: string\\n  style?: StyleOption;\\n  icon?: string;\\n  iconWidth?: number;\\n  scale?: number\\n}\\n\\nexport function badgen ({\\n  label,\\n  subject,\\n  status,\\n  color = 'blue',\\n  style,\\n  icon,\\n  iconWidth = 13,\\n  labelColor = '555',\\n  scale = 1\\n}: BadgenOptions) {\\n  typeAssert(typeof status === 'string', '<status> must be string')\\n\\n  label = label === undefined ? subject : label // subject is deprecated\\n  if (!label && !icon) {\\n    return bare({ status, color, style })\\n  }\\n\\n  color = colorPresets[color] || color\\n  labelColor = colorPresets[labelColor] || labelColor\\n  iconWidth = iconWidth * 10\\n\\n  const iconSpanWidth = icon ? (label.length ? iconWidth + 30 : iconWidth - 18) : 0\\n  const sbTextStart = icon ? (iconSpanWidth + 50) : 50\\n  const sbTextWidth = calcWidth(label)\\n  const stTextWidth = calcWidth(status)\\n  const sbRectWidth = sbTextWidth + 100 + iconSpanWidth\\n  const stRectWidth = stTextWidth + 100\\n  const width = sbRectWidth + stRectWidth\\n  const xlink = icon ? ' xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"' : ''\\n\\n  label = sanitize(label)\\n  status = sanitize(status)\\n\\n  if (style === 'flat') {\\n    return `<svg width=\\\"${scale * width / 10}\\\" height=\\\"${scale * 20}\\\" viewBox=\\\"0 0 ${width} 200\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"${xlink}>\\n  <g>\\n    <rect fill=\\\"#${labelColor}\\\" width=\\\"${sbRectWidth}\\\" height=\\\"200\\\"/>\\n    <rect fill=\\\"#${color}\\\" x=\\\"${sbRectWidth}\\\" width=\\\"${stRectWidth}\\\" height=\\\"200\\\"/>\\n  </g>\\n  <g fill=\\\"#fff\\\" text-anchor=\\\"start\\\" font-family=\\\"Verdana,DejaVu Sans,sans-serif\\\" font-size=\\\"110\\\">\\n    <text x=\\\"${sbTextStart + 10}\\\" y=\\\"148\\\" textLength=\\\"${sbTextWidth}\\\" fill=\\\"#000\\\" opacity=\\\"0.1\\\">${label}</text>\\n    <text x=\\\"${sbTextStart}\\\" y=\\\"138\\\" textLength=\\\"${sbTextWidth}\\\">${label}</text>\\n    <text x=\\\"${sbRectWidth + 55}\\\" y=\\\"148\\\" textLength=\\\"${stTextWidth}\\\" fill=\\\"#000\\\" opacity=\\\"0.1\\\">${status}</text>\\n    <text x=\\\"${sbRectWidth + 45}\\\" y=\\\"138\\\" textLength=\\\"${stTextWidth}\\\">${status}</text>\\n  </g>\\n  ${icon ? `<image x=\\\"40\\\" y=\\\"35\\\" width=\\\"${iconWidth}\\\" height=\\\"132\\\" xlink:href=\\\"${icon}\\\"/>` : ''}\\n</svg>`\\n  }\\n\\n  return `<svg width=\\\"${scale * width / 10}\\\" height=\\\"${scale * 20}\\\" viewBox=\\\"0 0 ${width} 200\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"${xlink}>\\n  <linearGradient id=\\\"a\\\" x2=\\\"0\\\" y2=\\\"100%\\\">\\n    <stop offset=\\\"0\\\" stop-opacity=\\\".1\\\" stop-color=\\\"#EEE\\\"/>\\n    <stop offset=\\\"1\\\" stop-opacity=\\\".1\\\"/>\\n  </linearGradient>\\n  <mask id=\\\"m\\\"><rect width=\\\"${width}\\\" height=\\\"200\\\" rx=\\\"30\\\" fill=\\\"#FFF\\\"/></mask>\\n  <g mask=\\\"url(#m)\\\">\\n    <rect width=\\\"${sbRectWidth}\\\" height=\\\"200\\\" fill=\\\"#${labelColor}\\\"/>\\n    <rect width=\\\"${stRectWidth}\\\" height=\\\"200\\\" fill=\\\"#${color}\\\" x=\\\"${sbRectWidth}\\\"/>\\n    <rect width=\\\"${width}\\\" height=\\\"200\\\" fill=\\\"url(#a)\\\"/>\\n  </g>\\n  <g fill=\\\"#fff\\\" text-anchor=\\\"start\\\" font-family=\\\"Verdana,DejaVu Sans,sans-serif\\\" font-size=\\\"110\\\">\\n    <text x=\\\"${sbTextStart + 10}\\\" y=\\\"148\\\" textLength=\\\"${sbTextWidth}\\\" fill=\\\"#000\\\" opacity=\\\"0.25\\\">${label}</text>\\n    <text x=\\\"${sbTextStart}\\\" y=\\\"138\\\" textLength=\\\"${sbTextWidth}\\\">${label}</text>\\n    <text x=\\\"${sbRectWidth + 55}\\\" y=\\\"148\\\" textLength=\\\"${stTextWidth}\\\" fill=\\\"#000\\\" opacity=\\\"0.25\\\">${status}</text>\\n    <text x=\\\"${sbRectWidth + 45}\\\" y=\\\"138\\\" textLength=\\\"${stTextWidth}\\\">${status}</text>\\n  </g>\\n  ${icon ? `<image x=\\\"40\\\" y=\\\"35\\\" width=\\\"${iconWidth}\\\" height=\\\"130\\\" xlink:href=\\\"${icon}\\\"/>` : ''}\\n</svg>`\\n}\\n\\nfunction bare ({ status, color, style }) {\\n  typeAssert(typeof status === 'string', '<status> must be string')\\n  color = colorPresets[color] || color || colorPresets.blue\\n\\n  const stTextWidth = calcWidth(status)\\n  const stRectWidth = stTextWidth + 115\\n\\n  status = sanitize(status)\\n\\n  if (style === 'flat') {\\n    return `<svg width=\\\"${stRectWidth / 10}\\\" height=\\\"20\\\" viewBox=\\\"0 0 ${stRectWidth} 200\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n  <g>\\n    <rect fill=\\\"#${color}\\\" x=\\\"0\\\" width=\\\"${stRectWidth}\\\" height=\\\"200\\\"/>\\n  </g>\\n  <g fill=\\\"#fff\\\" text-anchor=\\\"start\\\" font-family=\\\"Verdana,DejaVu Sans,sans-serif\\\" font-size=\\\"110\\\">\\n    <text x=\\\"65\\\" y=\\\"148\\\" textLength=\\\"${stTextWidth}\\\" fill=\\\"#000\\\" opacity=\\\"0.1\\\">${status}</text>\\n    <text x=\\\"55\\\" y=\\\"138\\\" textLength=\\\"${stTextWidth}\\\">${status}</text>\\n  </g>\\n</svg>`\\n  }\\n\\n  return `<svg width=\\\"${stRectWidth / 10}\\\" height=\\\"20\\\" viewBox=\\\"0 0 ${stRectWidth} 200\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n  <linearGradient id=\\\"a\\\" x2=\\\"0\\\" y2=\\\"100%\\\">\\n    <stop offset=\\\"0\\\" stop-opacity=\\\".1\\\" stop-color=\\\"#EEE\\\"/>\\n    <stop offset=\\\"1\\\" stop-opacity=\\\".1\\\"/>\\n  </linearGradient>\\n  <mask id=\\\"m\\\"><rect width=\\\"${stRectWidth}\\\" height=\\\"200\\\" rx=\\\"30\\\" fill=\\\"#FFF\\\"/></mask>\\n  <g mask=\\\"url(#m)\\\">\\n    <rect width=\\\"${stRectWidth}\\\" height=\\\"200\\\" fill=\\\"#${color}\\\" x=\\\"0\\\"/>\\n    <rect width=\\\"${stRectWidth}\\\" height=\\\"200\\\" fill=\\\"url(#a)\\\"/>\\n  </g>\\n  <g fill=\\\"#fff\\\" text-anchor=\\\"start\\\" font-family=\\\"Verdana,DejaVu Sans,sans-serif\\\" font-size=\\\"110\\\">\\n    <text x=\\\"65\\\" y=\\\"148\\\" textLength=\\\"${stTextWidth}\\\" fill=\\\"#000\\\" opacity=\\\"0.25\\\">${status}</text>\\n    <text x=\\\"55\\\" y=\\\"138\\\" textLength=\\\"${stTextWidth}\\\">${status}</text>\\n  </g>\\n</svg>`\\n}\\n\\nfunction sanitize (str: string): string {\\n  return str.replace(/\\\\u0026/g, '&amp;').replace(/\\\\u003C/g, '&lt;')\\n}\\n\\nfunction typeAssert (assertion: boolean, message: string): void {\\n  if (!assertion) throw new TypeError(message)\\n}\\n\\ndeclare global {\\n  interface Window {\\n    badgen: typeof badgen;\\n  }\\n}\\n\\nif (typeof window === 'object') {\\n  window.badgen = badgen\\n}\\n\",\"// import widthsVerdana110 from './widths-verdana-110.json'\\n// @ts-ignore\\nconst widthsVerdana110 = require('./widths-verdana-110.json')\\n\\nconst calcWidth = (charWidthTable) => {\\n  const fallbackWidth = charWidthTable[64] // Width as \\\"@\\\" for overflows\\n\\n  return ([...text]) => {\\n    let total = 0\\n    let charWidth = 0\\n    let i = text.length\\n    while (i--) {\\n      charWidth = charWidthTable[text[i].charCodeAt()]\\n      total += charWidth === undefined ? fallbackWidth : charWidth\\n    }\\n    return total\\n  }\\n}\\n\\nexport const Verdana110 = calcWidth(widthsVerdana110)\\n\"]}"